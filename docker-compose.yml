version: '3.8'

services:
  neo4j:
    image: neo4j:5.24
    container_name: neo4j-db
    ports:
      - "7687:7687"
      - "7474:7474"
    environment:
      - NEO4J_AUTH=neo4j/@Neo4j2025
      - NEO4J_PLUGINS=["apoc"]
    volumes:
      - neo4j_data:/var/lib/neo4j/data
    networks:
      - microservices
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:7474"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 40s

  userservice:
    build:
      context: .
      dockerfile: UserService/Dockerfile
    container_name: userservice-app
    ports:
      - "5000:5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - Neo4j__Uri=bolt://neo4j:7687
      - Neo4j__Username=neo4j
      - Neo4j__Password=@Neo4j2025
    depends_on:
      neo4j:
        condition: service_healthy
    networks:
      - microservices
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s

  notificationservice:
    build:
      context: .
      dockerfile: NotificationService/Dockerfile
    container_name: notificationservice-app
    ports:
      - "5002:5002"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Data Source=/app/data/notifications.db
    volumes:
      - notification_data:/app/data
    networks:
      - microservices
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s

volumes:
  neo4j_data:
  notification_data:

networks:
  microservices:
    driver: bridge